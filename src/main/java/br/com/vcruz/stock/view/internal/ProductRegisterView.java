package br.com.vcruz.stock.view.internal;

import br.com.vcruz.stock.exception.DuplicateException;
import br.com.vcruz.stock.exception.InternalException;
import br.com.vcruz.stock.exception.ValidationException;
import br.com.vcruz.stock.model.Product;
import br.com.vcruz.stock.service.ProductService;
import br.com.vcruz.stock.view.DashboardView;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import javax.swing.JOptionPane;

/**
 *
 * @author vcruz
 */
public class ProductRegisterView extends javax.swing.JInternalFrame {

    private final ProductService productService;
    private Product product;
    private final boolean isEditing;

    /**
     * Creates new form ProductRegisterView
     */
    public ProductRegisterView() {
        this.productService = new ProductService();
        this.isEditing = false;
        this.product = null;

        initComponents();
    }

    public ProductRegisterView(Product product, boolean isEditing) {
        this.productService = new ProductService();
        this.product = product;
        this.isEditing = isEditing;

        initComponents();

        if (this.isEditing) {
            this.setTitle("Editar produto");
            this.fillProductData(this.product);
        }
    }

    private void save() {
        String code = this.codeTextField.getText();
        String name = this.nameTextField.getText();
        String model = this.modelTextField.getText();
        String brand = this.brandTextField.getText();
        String priceString = this.priceTextField.getText().replace(",", ".");
        BigDecimal price = new BigDecimal(priceString.isBlank() ? "0" : priceString);
        Long createdBy = DashboardView.loggedUser.getId();

        try {
            String titleOfJOptionPane = "Cadastro";
            String messageOfJOptionPane = "Produto cadastrado!";

            if (isEditing) {
                titleOfJOptionPane = "Edição";
                messageOfJOptionPane = "Produto editado!";

                this.product = this.productService.update(product.getId(), code, name, model, brand, price, createdBy);
                this.fillProductData(product);
            } else {
                this.productService.save(code, name, model, brand, price, createdBy);
                this.resetForm();
            }

            JOptionPane.showMessageDialog(this, messageOfJOptionPane, titleOfJOptionPane, JOptionPane.INFORMATION_MESSAGE);
        } catch (ValidationException | DuplicateException | InternalException e) {
            String error = e.getMessage();

            if (e instanceof InternalException) {
                error = "[Erro interno] - Não foi possível cadastrar o produto!";
            }

            JOptionPane.showMessageDialog(this, error, "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void resetForm() {
        this.codeTextField.setText("");
        this.nameTextField.setText("");
        this.modelTextField.setText("");
        this.brandTextField.setText("");
        this.priceTextField.setText("");
    }

    private void processPriceInput(KeyEvent evt) {
        switch (evt.getKeyChar()) {
            case '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' -> {
                break;
            }
            case ',' -> {
                if (this.priceTextField.getText().contains(",") || this.priceTextField.getText().length() == 8) {
                    evt.consume();
                }

                break;
            }
            case '.' -> {
                if (this.priceTextField.getText().contains(",") || this.priceTextField.getText().length() == 8) {
                    evt.consume();
                } else {
                    evt.setKeyChar(',');
                }

                break;
            }
            default ->
                evt.consume();
        }

        if ((this.priceTextField.getText().contains(",") && this.priceTextField.getText().substring(this.priceTextField.getText().indexOf(',')).length() == 3) || this.priceTextField.getText().length() == 9) {
            evt.consume();
        }
    }

    private void fillProductData(Product product) {
        this.codeTextField.setText(product.getCode());
        this.nameTextField.setText(product.getName());
        this.modelTextField.setText(product.getModel());
        this.brandTextField.setText(product.getBrand());
        this.priceTextField.setText(product.getPrice().toString().replace(".", ","));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        codeTextField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        modelLabel = new javax.swing.JLabel();
        modelTextField = new javax.swing.JTextField();
        brandLabel = new javax.swing.JLabel();
        brandTextField = new javax.swing.JTextField();
        priceLabel = new javax.swing.JLabel();
        priceTextField = new javax.swing.JTextField();
        codeLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();

        setClosable(true);

        codeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codeTextFieldKeyPressed(evt);
            }
        });

        nameLabel.setText("Nome");

        nameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameTextFieldKeyPressed(evt);
            }
        });

        modelLabel.setText("Modelo");

        modelTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                modelTextFieldKeyPressed(evt);
            }
        });

        brandLabel.setText("Marca");

        brandTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                brandTextFieldKeyPressed(evt);
            }
        });

        priceLabel.setText("Preço");

        priceTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceTextFieldKeyTyped(evt);
            }
        });

        codeLabel.setText("Código");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codeTextField)
                    .addComponent(nameTextField)
                    .addComponent(modelTextField)
                    .addComponent(priceTextField)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(codeLabel)
                            .addComponent(nameLabel)
                            .addComponent(modelLabel)
                            .addComponent(brandLabel)
                            .addComponent(priceLabel))
                        .addGap(0, 734, Short.MAX_VALUE))
                    .addComponent(brandTextField))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(codeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(codeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(nameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(modelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(brandLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(brandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(priceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(243, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        saveButton.setText("Salvar");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        saveButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                saveButtonKeyPressed(evt);
            }
        });
        jPanel2.add(saveButton, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        setBounds(0, 0, 800, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void codeTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codeTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.save();
        }
    }//GEN-LAST:event_codeTextFieldKeyPressed

    private void nameTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.save();
        }
    }//GEN-LAST:event_nameTextFieldKeyPressed

    private void modelTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_modelTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.save();
        }
    }//GEN-LAST:event_modelTextFieldKeyPressed

    private void brandTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_brandTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.save();
        }
    }//GEN-LAST:event_brandTextFieldKeyPressed

    private void priceTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.save();
        }
    }//GEN-LAST:event_priceTextFieldKeyPressed

    private void saveButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saveButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.save();
        }
    }//GEN-LAST:event_saveButtonKeyPressed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        this.save();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void priceTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTextFieldKeyTyped
        this.processPriceInput(evt);
    }//GEN-LAST:event_priceTextFieldKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel brandLabel;
    private javax.swing.JTextField brandTextField;
    private javax.swing.JLabel codeLabel;
    private javax.swing.JTextField codeTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel modelLabel;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
